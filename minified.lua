local a=require("cc.expect").expect local b={}b.X,b.Y=term.getSize()b.bigY=b.Y-2 b.startY=4 local c=0 if pocket then c=1 b.nameLen=8 b.infoLen=16 b.items=11 elseif turtle then c=2 b.nameLen=12 b.infoLen=25 b.items=4 else c=3 b.nameLen=16 b.infoLen=32 b.items=10 end local d={}for s,t in pairs(colors)do d[s]=t d[t]=s end for s,t in pairs(colours)do d[s]=t d[t]=s end local function e(s,t)term.clear()term.setCursorPos(1,1)print("Grabbing a file that is required to display this page...")print(s,"==>",t)if fs.exists(t)then return end local u=http.get(s)if u then print("Connected.")local v=u.readAll()u.close()local w=io.open(t,'w')if w then w:write(v):close()print("Complete.")else error("Failed to open "..tostring(t).." for writing.",2)end else error("Failed to connect to "..tostring(s),2)end end local function f(s,t)s=s or""local u=string.len(s)+1 local v,w=term.getCursorPos()local x=term.getSize()local y=false local z=-1 local A=false term.setCursorBlink(true)while true do local B=type(t)=="string"and string.rep(t:sub(1,1),string.len(s))or s term.setCursorPos(v,w)io.write(string.rep(' ',x-v+1))term.setCursorPos(v,w)local C=u-(x-v+1)if C>=0 then io.write(string.sub(B,C+1))else io.write(B)end local D=v+u-1 if D>x then D=x end term.setCursorPos(D,w)if A then local G=term.getBackgroundColor()term.setBackgroundColor(colors.white)io.write(' ')term.setBackgroundColor(G)end local E={os.pullEvent()}local F=E[1]if F=="char"then local G=E[2]if y then s=string.sub(s,1,u-1)..G..string.sub(s,u+1)else s=string.sub(s,1,u-1)..G..string.sub(s,u)end u=u+1 elseif F=="key"then local G=E[2]if G==keys.backspace then local H=u-2 if u-2<0 then H=0 end s=string.sub(s,1,H)..string.sub(s,u)u=u-1 if u<1 then u=1 end elseif G==keys.enter then term.setCursorBlink(false)print()return s elseif G==keys.right then u=u+1 if u>string.len(s)+1 then u=string.len(s)+1 end elseif G==keys.left then u=u-1 if u<1 then u=1 end elseif G==keys.up then u=1 elseif G==keys.down then u=string.len(s)+1 elseif G==keys.delete then s=string.sub(s,1,u-1)..string.sub(s,u+1)elseif G==keys.insert then if y then y=false term.setCursorBlink(true)os.cancelTimer(z)z=-1 A=false else y=true term.setCursorBlink(false)z=os.startTimer(0.4)end end elseif F=="timer"then local G=E[2]if G==z then A=not A z=os.startTimer(0.4)end end end end local function g(s,t,u,v)if type(s)~=t then error(u.." (expected "..t..", got "..type(s)..")",v and v+1 or 3)end end local function h(s,t,u,v)if type(s)~="string"then error("Check failure: not string",2)end if string.len(s)>t then error("Page layout string "..u.." is too long (max: "..tostring(t)..", at: "..tostring(string.len(s))..")",v and v+1 or 3)end end local function i(s)g(s,"table","Page layout is not a table.")g(s.name,"string","Page: name is of wrong type.")local t="Page "..s.name..": %s is of wrong type."g(s.platform,"string",string.format(t,"platform"))if s.platform=="all"then elseif pocket and s.platform~="pocket"or turtle and s.platform~="turtle"or not pocket and not turtle and(s.platform=="pocket"or s.platform=="turtle")then error("Menu is designed for a different platform ("..s.platform..").",2)end h(s.name,b.nameLen,"page.name")g(s.info,"string",string.format(t,"info"))h(s.info,b.infoLen,"page.info")g(s.bigInfo,"string",string.format(t,"bigInfo"))term.setCursorPos(1,1)local u=write(s.bigInfo)if u>2 then error("Page "..s.name..": bigInfo is too long and prints too many ".."lines.",2)end g(s.colors,"table",string.format(t,"colors"))g(s.colors.bg,"table",string.format(t,"colors.bg"))local v={"main"}for w=1,#v do g(s.colors.bg[v[w]],"string",string.format(t,"colors.bg."..v[w]))end g(s.colors.fg,"table",string.format(t,"colors.fg"))v={"error","main","title","info","listInfo","listTitle","bigInfo","selector","arrowDisabled","arrowEnabled","input"}for w=1,#v do g(s.colors.fg[v[w]],"string",string.format(t,"colors.fg."..v[w]))end if s.selections then for w=1,#s.selections do local x=s.selections[w]local y="Page "..s.name..", selection "..tostring(w)..": %s is of wrong type."local z="page.settings["..tostring(w).."].%s"g(x.title,"string",string.format(y,"title"))h(x.title,b.nameLen,string.format(z,"title"))g(x.info,"string",string.format(y,"info"))h(x.info,b.infoLen,string.format(z,"info"))g(x.bigInfo,"string",string.format(y,"bigInfo"))term.setCursorPos(1,1)local A=write(x.bigInfo)if A>2 then error("Page "..s.name..", selection "..tostring(w)..": bigInfo is too long and prints too many ".."lines (Unknown max length).",2)end end else s.selections={}end if s.settings then for w=1,#s.settings do local x=s.settings[w]local y="Page "..s.name..", setting "..tostring(w)..": %s is of wrong type."local z="page.settings["..tostring(w).."].%s"g(x.title,"string",string.format(y,"title"))h(x.title,b.nameLen,"title")g(x.bigInfo,"string",string.format(y,"bigInfo"))term.setCursorPos(1,1)local A=write(x.bigInfo)if A>2 then error("Page "..s.name..", setting "..tostring(w)..": bigInfo is too long and prints too many ".."lines (Unknown max length).",2)end g(x.setting,"string",string.format(y,"setting"))g(x.tp,"string",string.format(y,"tp"))if x.min then g(x.min,"number",string.format(y,"min"))end if x.max then g(x.max,"number",string.format(y,"max"))end if x.tp=="password"then g(x.store,"string",string.format(y,"store"))if x.store~="plain"and x.store~="sha256"and x.store~="sha256salt"and x.store~="kristwallet"then error(string.format("Page %s, setting %d: store is not of allowed ".."values (plain, sha256, sha256salt, kristwallet)",s.name,w),2)elseif x.store~="plain"then e("https://pastebin.com/raw/6UV4qfNF","/sha256.lua")end end end else s.settings={}end if s.subPages then for w=1,#s.subPages do local x=s.subPages[w]local y="Subpage %d: %s is of wrong type."g(x.name,"string",string.format(y,w,"name"))g(x.info,"string",string.format(y,w,"info"))g(x.bigInfo,"string",string.format(y,w,"bigInfo"))term.setCursorPos(1,1)local z=write(x.bigInfo)if z>2 then error("Page "..s.name..", subpage "..tostring(w)..": bigInfo is too long and prints too many ".."lines (Unknown max length).",2)end end else s.subPages={}end term.clear()end local function j(s,t)local u=#s.selections local v=#s.settings local w=#s.subPages if t>u then if t>u+v then if t==u+v+w+1 then return 1,{title=s.final or"Exit",info="",bigInfo=""}end if t>u+v+w then return 0 end return 3,s.subPages[t-u-v]end return 2,s.settings[t-u]end return 1,s.selections[t]end local function k(s)return#s.selections+#s.settings+#s.subPages end local function l(s,t,u)local v=tostring(settings.get(t.setting))local w,x=term.getSize()if v=="nil"then v="0"end while true do term.setCursorPos(b.nameLen+3,b.startY+u)io.write(string.rep(' ',w-14))term.setCursorPos(b.nameLen+3,b.startY+u)local y=tonumber(f(v))if not y then term.setCursorPos(b.nameLen+3,b.startY+u)io.write(string.rep(' ',w-14))term.setCursorPos(b.nameLen+3,b.startY+u)local z=term.getTextColor()term.setTextColor(d[s.colors.fg.error])io.write("Not a number.")term.setTextColor(z)os.sleep(2)else local z=true if t.min and y<t.min then z=false term.setCursorPos(b.nameLen+3,b.startY+u)io.write(string.rep(' ',w-14))term.setCursorPos(b.nameLen+3,b.startY+u)local A=term.getTextColor()term.setTextColor(d[s.colors.fg.error])io.write(string.format("Minimum: %d",t.min))term.setTextColor(A)v=tostring(t.min)end if t.max and y>t.max then z=false term.setCursorPos(b.nameLen+3,b.startY+u)io.write(string.rep(' ',w-14))term.setCursorPos(b.nameLen+3,b.startY+u)local A=term.getTextColor()term.setTextColor(d[s.colors.fg.error])io.write(string.format("Maximum: %d",t.max))term.setTextColor(A)v=tostring(t.max)end if z then return y else os.sleep(2)end end end end local function m(s,t,u)local v=tostring(d[settings.get(t.setting)])local w,x=term.getSize()if v=="nil"then v="?"end while true do term.setCursorPos(b.nameLen+3,b.startY+u)io.write(string.rep(' ',w-14))term.setCursorPos(b.nameLen+3,b.startY+u)local y=f(v)local z=tonumber(y)if z then if d[z]then return z else term.setCursorPos(b.nameLen+3,b.startY+u)io.write(string.rep(' ',w-14))term.setCursorPos(b.nameLen+3,b.startY+u)local A=term.getTextColor()term.setTextColor(d[s.colors.fg.error])io.write("Not a color.")term.setTextColor(A)os.sleep(2)end else if d[y]then return d[y]else term.setCursorPos(b.nameLen+3,b.startY+u)io.write(string.rep(' ',w-14))term.setCursorPos(b.nameLen+3,b.startY+u)local A=term.getTextColor()term.setTextColor(d[s.colors.fg.error])io.write("Not a color.")term.setTextColor(A)os.sleep(2)end end end end local function n(s,t,u)local v,w=term.getSize()while true do term.setCursorPos(2,b.startY+u)io.write(string.rep(' ',v-1))term.setCursorPos(2,b.startY+u)term.setTextColor(d[s.colors.fg.listTitle])io.write("Password:")term.setCursorPos(b.nameLen+3,b.startY+u)io.write(string.rep(' ',v-14))term.setCursorPos(b.nameLen+3,b.startY+u)term.setTextColor(d[s.colors.fg.input])local x=f("",'*')term.setCursorPos(2,b.startY+u)io.write(string.rep(' ',v-1))term.setCursorPos(2,b.startY+u)term.setTextColor(d[s.colors.fg.listTitle])io.write("Repeat:")term.setCursorPos(b.nameLen+3,b.startY+u)io.write(string.rep(' ',v-14))term.setCursorPos(b.nameLen+3,b.startY+u)term.setTextColor(d[s.colors.fg.input])local y=f("",'*')if x==y then local z if t.store=="sha256"or t.store=="sha256salt"or t.store=="kristwallet"then local A=require(".sha256")if t.store=="sha256salt"then z=math.random(1,100000)x=tostring(z)..","..x end if t.store=="kristwallet"then x="KRISTWALLET"..x end x=A.digest(x):toHex()if t.store=="kristwallet"then x=x.."-000"end end return x,z else term.setCursorPos(b.nameLen+3,b.startY+u)io.write(string.rep(' ',v-14))term.setCursorPos(b.nameLen+3,b.startY+u)local z=term.getTextColor()term.setTextColor(d[s.colors.fg.error])io.write("Not matching!")term.setTextColor(z)os.sleep(2)end end end local function o(s,t,u)local v,w=term.getSize()local x=false term.setTextColor(d[s.colors.fg.listTitle])term.setCursorPos(2,b.startY+u)io.write(string.rep(' ',v-1))term.setCursorPos(2,b.startY+u)io.write("You sure?")while true do term.setCursorPos(b.nameLen+3,b.startY+u)io.write(string.rep(' ',v-14))term.setCursorPos(b.nameLen+3,b.startY+u)term.setTextColor(d[s.colors.fg.input])io.write(x and"[ YES ] NO"or"  YES [ NO ]")local y,z=os.pullEvent("key")if z==keys.right or z==keys.left or z==keys.tab then x=not x elseif z==keys.enter then return x end end end local function p(s,t,u)local v,w=term.getSize()local x,y=j(s,t)local z if x~=2 then error("Dawg something happened!",2)end term.setCursorPos(b.nameLen+3,b.startY+u)term.setTextColor(colors[s.colors.fg.input])if y.tp=="string"then local A=f(settings.get(y.setting))settings.set(y.setting,A)settings.save(s.settings.location)z=A elseif y.tp=="number"then local A=l(s,y,u)settings.set(y.setting,A)settings.save(s.settings.location)z=A elseif y.tp=="color"then local A=m(s,y,u)settings.set(y.setting,A)settings.save(s.settings.location)z=A elseif y.tp=="boolean"then local A=settings.get(y.setting)if A==nil then A=true else A=not A end settings.set(y.setting,A)settings.save(s.settings.location)z=A elseif y.tp=="password"then if o(s,y,u)then local A,B=n(s,y,u)settings.set(y.setting,A)if B then settings.set(y.setting..".salt",B)end settings.save(s.settings.location)end z=""else local A=term.getTextColor()term.setTextColor(d[s.colors.fg.error])io.write(string.format("Cannot edit type '%s'.",y.tp))term.setTextColor(A)os.sleep(2)end return s.settings.location,y.setting,z,s end local function q(s,t,u)a(1,s,"table")a(2,t,"function","nil")a(3,u,"number","nil")t=t or function()end local v=1 local w=1 local x=1 local y={}local z=false local A local B i(s)if not s.settings.location then s.settings.location=".settings"end settings.load(s.settings.location)if u then A=os.startTimer(u)end local function C()while true do term.setBackgroundColor(colors[s.colors.bg.main])term.setTextColor(colors[s.colors.fg.title])term.clear()term.setCursorPos(1,1)io.write(s.name)term.setCursorPos(1,2)term.setTextColor(colors[s.colors.fg.info])io.write(s.info)for H=0,b.items-1 do local I,J=j(s,x+H)term.setCursorPos(2,5+H)if I==1 then term.setTextColor(colors[s.colors.fg.listTitle])io.write(J.title)term.setCursorPos(b.nameLen+3,5+H)term.setTextColor(colors[s.colors.fg.listInfo])io.write(J.info)elseif I==2 then local K=settings.get(J.setting)if type(K)=="string"and string.len(K)>b.infoLen then K=K:sub(1,b.infoLen-3)K=K.."..."end term.setTextColor(colors[s.colors.fg.listTitle])io.write(J.title)term.setCursorPos(b.nameLen+3,5+H)term.setTextColor(colors[s.colors.fg.listInfo])if J.tp=="string"or J.tp=="number"then io.write(K or"Error: empty")elseif J.tp=="boolean"then if K==true then io.write("  false [ true ]")elseif K==false then io.write("[ false ] true")else io.write("? false ? true ?")end elseif J.tp=="color"then io.write(K and string.format("%s (%d)",d[K],K)or"? (nil)")elseif J.tp=="password"then local L={plain="Plaintext",sha256="sha256",sha256salt="sha256 + salt",kristwallet="Kristwallet"}if pocket then io.write(K and L[J.store]or"Not yet set")else io.write(K and"Stored as "..L[J.store]or"Not yet set")end else io.write(pocket and"Unsupported"or"Unsupported type.")end elseif I==3 then term.setTextColor(colors[s.colors.fg.listTitle])io.write(J.name)term.setTextColor(colors[s.colors.fg.listInfo])term.setCursorPos(b.nameLen+3,5+H)io.write(J.info)elseif I~=0 then io.write("Broken.")end end local E,F=j(s,v)term.setTextColor(colors[s.colors.fg.bigInfo])term.setCursorPos(1,b.Y-2)io.write(F.bigInfo)term.setCursorPos(1,b.startY+w)term.setTextColor(colors[s.colors.fg.selector])io.write(">")term.setCursorPos(1,b.startY+b.items+1)if x+b.items>k(s)+1 then term.setTextColor(colors[s.colors.fg.arrowDisabled])else term.setTextColor(colors[s.colors.fg.arrowEnabled])end io.write(string.char(31))term.setCursorPos(1,b.startY)if x>1 then term.setTextColor(colors[s.colors.fg.arrowEnabled])else term.setTextColor(colors[s.colors.fg.arrowDisabled])end io.write(string.char(30))local G=table.pack(os.pullEvent())if G[1]=="key"then z=true local H,I=table.unpack(G,1,2)if I==keys.up then v=v-1 if w==1 then x=x-1 end if x<1 then x=1 end w=w-1 if w<1 then w=1 end if v<1 then v=k(s)+1 w=(k(s)+1)<b.items and(k(s)+1)or b.items x=v-b.items+1 if x<1 then x=1 end end elseif I==keys.down then v=v+1 if w==b.items then x=x+1 end w=w+1 if w>b.items then w=b.items end if v>k(s)+1 then v=1 x=1 w=1 end elseif I==keys.enter then if E==1 then B=v return elseif E==2 then t(p(s,v,w))elseif E==3 then local J,K=j(s,v)if not K.colors then K.colors=s.colors end if not K.platform then K.platform=s.platform end if not K.settings then K.settings={location=s.settings.location}end if not K.settings.location then K.settings.location=s.settings.location end q(K,t)end end elseif G[1]=="timer"and G[2]==A and not z then B=1 return end end end local function D()if A then local E for F=u,1,-1 do E=F local G=tostring(F)term.setTextColor(colors.white)term.setBackgroundColor(colors.black)term.setCursorPos(b.X-#tostring(F+1),3)io.write(string.rep(' ',#tostring(F+1)))term.setCursorPos(b.X-#G,3)io.write(G)if z then break end os.sleep(1)end term.setCursorPos(b.X-#tostring(E+1),3)term.setBackgroundColor(colors.black)io.write(string.rep(' ',#tostring(E+1)))end while true do os.pullEvent("Nonexistant")end end parallel.waitForAny(C,D)if B then return B end printError("This shouldn't happen.")printError("Please report to le github with your layout file.")os.sleep(30)end local function r(s,t,u)a(1,s,"string")a(2,t,"function","nil")a(3,u,"number","nil")local v=io.open(s,'r')if v then local w=v:read("*a")v:close()local x,y=load("return "..tostring(w),s)if not x then error(y,2)end return q(x(),t,u)else error(string.format("No file '%s'.",s),2)end end return{display=q,displayFile=r}