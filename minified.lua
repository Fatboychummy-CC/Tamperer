local a=require("cc.expect").expect local b={}b.X,b.Y=term.getSize()b.bigY=b.Y-2 b.startY=4 local c=0 if pocket then c=1 b.nameLen=8 b.infoLen=16 b.items=11 elseif turtle then c=2 b.nameLen=12 b.infoLen=25 b.items=4 else c=3 b.nameLen=16 b.infoLen=32 b.items=10 end local d={}for v,w in pairs(colors)do d[v]=w d[w]=v end for v,w in pairs(colours)do d[v]=w d[w]=v end local function e(v,w)term.clear()term.setCursorPos(1,1)print("Grabbing a file that is required to display this page...")w=fs.combine(shell.dir(),fs.combine("modules",w))print(v,"==>",w)if fs.exists(w)then return end local x=http.get(v)if x then print("Connected.")local y=x.readAll()x.close()local z=io.open(w,'w')if z then z:write(y):close()print("Complete.")else error("Failed to open "..tostring(w).." for writing.",2)end else error("Failed to connect to "..tostring(v),2)end end local function f(v,w)v=v or""local x=string.len(v)+1 local y,z=term.getCursorPos()local A=term.getSize()local B=false local C=-1 local D=false term.setCursorBlink(true)while true do local E=type(w)=="string"and string.rep(w:sub(1,1),string.len(v))or v term.setCursorPos(y,z)io.write(string.rep(' ',A-y+1))term.setCursorPos(y,z)local F=x-(A-y+1)if F>=0 then io.write(string.sub(E,F+1))else io.write(E)end local G=y+x-1 if G>A then G=A end term.setCursorPos(G,z)if D then local J=term.getBackgroundColor()term.setBackgroundColor(colors.white)io.write(' ')term.setBackgroundColor(J)end local H={os.pullEvent()}local I=H[1]if I=="char"then local J=H[2]if B then v=string.sub(v,1,x-1)..J..string.sub(v,x+1)else v=string.sub(v,1,x-1)..J..string.sub(v,x)end x=x+1 elseif I=="key"then local J=H[2]if J==keys.backspace then local K=x-2 if x-2<0 then K=0 end v=string.sub(v,1,K)..string.sub(v,x)x=x-1 if x<1 then x=1 end elseif J==keys.enter then term.setCursorBlink(false)print()return v elseif J==keys.right then x=x+1 if x>string.len(v)+1 then x=string.len(v)+1 end elseif J==keys.left then x=x-1 if x<1 then x=1 end elseif J==keys.up then x=1 elseif J==keys.down then x=string.len(v)+1 elseif J==keys.delete then v=string.sub(v,1,x-1)..string.sub(v,x+1)elseif J==keys.insert then if B then B=false term.setCursorBlink(true)os.cancelTimer(C)C=-1 D=false else B=true term.setCursorBlink(false)C=os.startTimer(0.4)end end elseif I=="timer"then local J=H[2]if J==C then D=not D C=os.startTimer(0.4)end end end end local function g(v,w,x,y)if type(v)~=w then error(x.." (expected "..w..", got "..type(v)..")",y and y+1 or 3)end end local function h(v,w,x,y)if type(v)~="string"then error("Check failure: not string",2)end if string.len(v)>w then error("Page layout string "..x.." is too long (max: "..tostring(w)..", at: "..tostring(string.len(v))..")",y and y+1 or 3)end end local function i(v)g(v,"table","Page layout is not a table.")g(v.name,"string","Page: name is of wrong type.")local w="Page "..v.name..": %s is of wrong type."g(v.platform,"string",string.format(w,"platform"))if v.platform=="all"then elseif pocket and v.platform~="pocket"or turtle and v.platform~="turtle"or not pocket and not turtle and(v.platform=="pocket"or v.platform=="turtle")then error("Menu is designed for a different platform ("..v.platform..").",2)end h(v.name,b.nameLen,"page.name")g(v.info,"string",string.format(w,"info"))h(v.info,b.infoLen,"page.info")g(v.bigInfo,"string",string.format(w,"bigInfo"))term.setCursorPos(1,1)local x=write(v.bigInfo)if x>2 then error("Page "..v.name..": bigInfo is too long and prints too many ".."lines.",2)end g(v.colors,"table",string.format(w,"colors"))g(v.colors.bg,"table",string.format(w,"colors.bg"))local y={"main"}for z=1,#y do g(v.colors.bg[y[z]],"string",string.format(w,"colors.bg."..y[z]))end g(v.colors.fg,"table",string.format(w,"colors.fg"))y={"error","main","title","info","listInfo","listTitle","bigInfo","selector","arrowDisabled","arrowEnabled","input"}for z=1,#y do g(v.colors.fg[y[z]],"string",string.format(w,"colors.fg."..y[z]))end if v.selections then for z=1,#v.selections do local A=v.selections[z]local B="Page "..v.name..", selection "..tostring(z)..": %s is of wrong type."local C="page.settings["..tostring(z).."].%s"g(A.title,"string",string.format(B,"title"))h(A.title,b.nameLen,string.format(C,"title"))g(A.info,"string",string.format(B,"info"))h(A.info,b.infoLen,string.format(C,"info"))g(A.bigInfo,"string",string.format(B,"bigInfo"))term.setCursorPos(1,1)local D=write(A.bigInfo)if D>2 then error("Page "..v.name..", selection "..tostring(z)..": bigInfo is too long and prints too many ".."lines (Unknown max length).",2)end end else v.selections={}end if v.settings then for z=1,#v.settings do local A=v.settings[z]local B="Page "..v.name..", setting "..tostring(z)..": %s is of wrong type."local C="page.settings["..tostring(z).."].%s"g(A.title,"string",string.format(B,"title"))h(A.title,b.nameLen,"title")g(A.bigInfo,"string",string.format(B,"bigInfo"))term.setCursorPos(1,1)local D=write(A.bigInfo)if D>2 then error("Page "..v.name..", setting "..tostring(z)..": bigInfo is too long and prints too many ".."lines (Unknown max length).",2)end g(A.setting,"string",string.format(B,"setting"))g(A.tp,"string",string.format(B,"tp"))if A.min then g(A.min,"number",string.format(B,"min"))end if A.max then g(A.max,"number",string.format(B,"max"))end if A.tp=="password"then g(A.store,"string",string.format(B,"store"))if A.store~="plain"and A.store~="sha256"and A.store~="sha256salt"and A.store~="kristwallet"then error(string.format("Page %s, setting %d: store is not of allowed ".."values (plain, sha256, sha256salt, kristwallet)",v.name,z),2)elseif A.store~="plain"then e("https://pastebin.com/raw/6UV4qfNF","sha256.lua")end end end else v.settings={}end if v.subPages then for z=1,#v.subPages do local A=v.subPages[z]local B="Subpage %d: %s is of wrong type."g(A.name,"string",string.format(B,z,"name"))g(A.info,"string",string.format(B,z,"info"))g(A.bigInfo,"string",string.format(B,z,"bigInfo"))term.setCursorPos(1,1)local C=write(A.bigInfo)if C>2 then error("Page "..v.name..", subpage "..tostring(z)..": bigInfo is too long and prints too many ".."lines (Unknown max length).",2)end end else v.subPages={}end term.clear()end local function j(v,w)local x=#v.selections local y=#v.settings local z=#v.subPages if w>x then if w>x+y then if w==x+y+z+1 then return 1,{title=v.final or"Go back.",info="",bigInfo=""}end if w>x+y+z then return 0 end return 3,v.subPages[w-x-y]end return 2,v.settings[w-x]end return 1,v.selections[w]end local function k(v)return#v.selections+#v.settings+#v.subPages end local function l(v,w,x)local y=tostring(settings.get(w.setting))local z,A=term.getSize()if y=="nil"then y="0"end while true do term.setCursorPos(b.nameLen+3,b.startY+x)io.write(string.rep(' ',z-14))term.setCursorPos(b.nameLen+3,b.startY+x)local B=tonumber(f(y))if not B then term.setCursorPos(b.nameLen+3,b.startY+x)io.write(string.rep(' ',z-14))term.setCursorPos(b.nameLen+3,b.startY+x)local C=term.getTextColor()term.setTextColor(d[v.colors.fg.error])io.write("Not a number.")term.setTextColor(C)os.sleep(2)else local C=true if w.min and B<w.min then C=false term.setCursorPos(b.nameLen+3,b.startY+x)io.write(string.rep(' ',z-14))term.setCursorPos(b.nameLen+3,b.startY+x)local D=term.getTextColor()term.setTextColor(d[v.colors.fg.error])io.write(string.format("Minimum: %d",w.min))term.setTextColor(D)y=tostring(w.min)end if w.max and B>w.max then C=false term.setCursorPos(b.nameLen+3,b.startY+x)io.write(string.rep(' ',z-14))term.setCursorPos(b.nameLen+3,b.startY+x)local D=term.getTextColor()term.setTextColor(d[v.colors.fg.error])io.write(string.format("Maximum: %d",w.max))term.setTextColor(D)y=tostring(w.max)end if C then return B else os.sleep(2)end end end end local function m(v,w,x)local y=tostring(d[settings.get(w.setting)])local z,A=term.getSize()if y=="nil"then y="?"end while true do term.setCursorPos(b.nameLen+3,b.startY+x)io.write(string.rep(' ',z-14))term.setCursorPos(b.nameLen+3,b.startY+x)local B=f(y)local C=tonumber(B)if C then if d[C]then return C else term.setCursorPos(b.nameLen+3,b.startY+x)io.write(string.rep(' ',z-14))term.setCursorPos(b.nameLen+3,b.startY+x)local D=term.getTextColor()term.setTextColor(d[v.colors.fg.error])io.write("Not a color.")term.setTextColor(D)os.sleep(2)end else if d[B]then return d[B]else term.setCursorPos(b.nameLen+3,b.startY+x)io.write(string.rep(' ',z-14))term.setCursorPos(b.nameLen+3,b.startY+x)local D=term.getTextColor()term.setTextColor(d[v.colors.fg.error])io.write("Not a color.")term.setTextColor(D)os.sleep(2)end end end end local function n(v,w,x)local y,z=term.getSize()while true do term.setCursorPos(2,b.startY+x)io.write(string.rep(' ',y-1))term.setCursorPos(2,b.startY+x)term.setTextColor(d[v.colors.fg.listTitle])io.write("Password:")term.setCursorPos(b.nameLen+3,b.startY+x)io.write(string.rep(' ',y-14))term.setCursorPos(b.nameLen+3,b.startY+x)term.setTextColor(d[v.colors.fg.input])local A=f("",'*')term.setCursorPos(2,b.startY+x)io.write(string.rep(' ',y-1))term.setCursorPos(2,b.startY+x)term.setTextColor(d[v.colors.fg.listTitle])io.write("Repeat:")term.setCursorPos(b.nameLen+3,b.startY+x)io.write(string.rep(' ',y-14))term.setCursorPos(b.nameLen+3,b.startY+x)term.setTextColor(d[v.colors.fg.input])local B=f("",'*')if A==B then local C if w.store=="sha256"or w.store=="sha256salt"or w.store=="kristwallet"then local D=require("sha256")if w.store=="sha256salt"then C=math.random(1,100000)A=tostring(C)..","..A end if w.store=="kristwallet"then A="KRISTWALLET"..A end A=D.digest(A):toHex()if w.store=="kristwallet"then A=A.."-000"end end return A,C else term.setCursorPos(b.nameLen+3,b.startY+x)io.write(string.rep(' ',y-14))term.setCursorPos(b.nameLen+3,b.startY+x)local C=term.getTextColor()term.setTextColor(d[v.colors.fg.error])io.write("Not matching!")term.setTextColor(C)os.sleep(2)end end end local function o(v,w,x)local y,z=term.getSize()local A=false term.setTextColor(d[v.colors.fg.listTitle])term.setCursorPos(2,b.startY+x)io.write(string.rep(' ',y-1))term.setCursorPos(2,b.startY+x)io.write("You sure?")while true do term.setCursorPos(b.nameLen+3,b.startY+x)io.write(string.rep(' ',y-14))term.setCursorPos(b.nameLen+3,b.startY+x)term.setTextColor(d[v.colors.fg.input])io.write(A and"[ YES ] NO"or"  YES [ NO ]")local B,C=os.pullEvent("key")if C==keys.right or C==keys.left or C==keys.tab then A=not A elseif C==keys.enter then return A end end end local function p(v,w,x)local y,z=term.getSize()local A,B=j(v,w)local C if A~=2 then error("Dawg something happened!",2)end term.setCursorPos(b.nameLen+3,b.startY+x)term.setTextColor(colors[v.colors.fg.input])if B.tp=="string"then local D=f(settings.get(B.setting))settings.set(B.setting,D)settings.save(v.settings.location)C=D elseif B.tp=="number"then local D=l(v,B,x)settings.set(B.setting,D)settings.save(v.settings.location)C=D elseif B.tp=="color"then local D=m(v,B,x)settings.set(B.setting,D)settings.save(v.settings.location)C=D elseif B.tp=="boolean"then local D=settings.get(B.setting)if D==nil then D=true else D=not D end settings.set(B.setting,D)settings.save(v.settings.location)C=D elseif B.tp=="password"then if o(v,B,x)then local D,E=n(v,B,x)settings.set(B.setting,D)if E then settings.set(B.setting..".salt",E)end settings.save(v.settings.location)end C=""else local D=term.getTextColor()term.setTextColor(d[v.colors.fg.error])io.write(string.format("Cannot edit type '%s'.",B.tp))term.setTextColor(D)os.sleep(2)end return v.settings.location,B.setting,C,v end local function q(v,w,x)a(1,v,"table")a(2,w,"function","nil")a(3,x,"number","nil")w=w or function()end local y=1 local z=1 local A=1 local B={}local C=false local D local E i(v)if not v.settings.location then v.settings.location=".settings"end settings.load(v.settings.location)if x then D=os.startTimer(x)end local function F()while true do term.setBackgroundColor(colors[v.colors.bg.main])term.setTextColor(colors[v.colors.fg.title])term.clear()term.setCursorPos(1,1)io.write(v.name)term.setCursorPos(1,2)term.setTextColor(colors[v.colors.fg.info])io.write(v.info)for M=0,b.items-1 do local N,O=j(v,A+M)term.setCursorPos(2,5+M)if N==1 then term.setTextColor(colors[v.colors.fg.listTitle])io.write(O.title)term.setCursorPos(b.nameLen+3,5+M)term.setTextColor(colors[v.colors.fg.listInfo])io.write(O.info)elseif N==2 then local P=settings.get(O.setting)if type(P)=="string"and string.len(P)>b.infoLen then P=P:sub(1,b.infoLen-3)P=P.."..."end term.setTextColor(colors[v.colors.fg.listTitle])io.write(O.title)term.setCursorPos(b.nameLen+3,5+M)term.setTextColor(colors[v.colors.fg.listInfo])if O.tp=="string"or O.tp=="number"then io.write(P or"Error: empty")elseif O.tp=="boolean"then if P==true then io.write("  false [ true ]")elseif P==false then io.write("[ false ] true")else io.write("? false ? true ?")end elseif O.tp=="color"then io.write(P and string.format("%s (%d)",d[P],P)or"? (nil)")elseif O.tp=="password"then local Q={plain="Plaintext",sha256="sha256",sha256salt="sha256 + salt",kristwallet="Kristwallet"}if pocket then io.write(P and Q[O.store]or"Not yet set")else io.write(P and"Stored as "..Q[O.store]or"Not yet set")end else io.write(pocket and"Unsupported"or"Unsupported type.")end elseif N==3 then term.setTextColor(colors[v.colors.fg.listTitle])io.write(O.name)term.setTextColor(colors[v.colors.fg.listInfo])term.setCursorPos(b.nameLen+3,5+M)io.write(O.info)elseif N~=0 then io.write("Broken.")end end local H,I=j(v,y)term.setTextColor(colors[v.colors.fg.bigInfo])term.setCursorPos(1,b.Y-2)io.write(I.bigInfo)term.setCursorPos(1,b.startY+z)term.setTextColor(colors[v.colors.fg.selector])io.write(">")term.setCursorPos(1,b.startY+b.items+1)if A+b.items>k(v)+1 then term.setTextColor(colors[v.colors.fg.arrowDisabled])else term.setTextColor(colors[v.colors.fg.arrowEnabled])end io.write(string.char(31))term.setCursorPos(1,b.startY)if A>1 then term.setTextColor(colors[v.colors.fg.arrowEnabled])else term.setTextColor(colors[v.colors.fg.arrowDisabled])end io.write(string.char(30))local function J()y=y-1 if z==1 then A=A-1 end if A<1 then A=1 end z=z-1 if z<1 then z=1 end if y<1 then y=k(v)+1 z=(k(v)+1)<b.items and(k(v)+1)or b.items A=y-b.items+1 if A<1 then A=1 end end end local function K()y=y+1 if z==b.items then A=A+1 end z=z+1 if z>b.items then z=b.items end if y>k(v)+1 then y=1 A=1 z=1 end end local L=table.pack(os.pullEvent())if L[1]=="key"then C=true local M,N=table.unpack(L,1,2)if N==keys.up then J()elseif N==keys.down then K()elseif N==keys.enter then if H==1 then E=y return elseif H==2 then local O,P,Q,R=p(v,y,z)w(O,P,Q,R)settings.save(O)elseif H==3 then local O,P=j(v,y)if not P.colors then P.colors=v.colors end if not P.platform then P.platform=v.platform end if not P.settings then P.settings={location=v.settings.location}end if not P.settings.location then P.settings.location=v.settings.location end q(P,w)end end elseif L[1]=="mouse_scroll"then C=true if L[2]==-1 then J()else K()end elseif L[1]=="timer"and L[2]==D and not C then E=1 return end end end local function G()if D then local H for I=x,1,-1 do H=I local J=tostring(I)term.setTextColor(colors.white)term.setBackgroundColor(colors.black)term.setCursorPos(b.X-#tostring(I+1),3)io.write(string.rep(' ',#tostring(I+1)))term.setCursorPos(b.X-#J,3)io.write(J)if C then break end os.sleep(1)end term.setCursorPos(b.X-#tostring(H+1),3)term.setBackgroundColor(colors.black)io.write(string.rep(' ',#tostring(H+1)))end while true do os.pullEvent("Nonexistant")end end parallel.waitForAny(F,G)if E then return E end printError("This shouldn't happen.")printError("Please report to le github with your layout file.")os.sleep(30)end local function r(v,w)a(1,v,"string")a(2,w,"number","nil")w=w or 0 local x=io.open(v,'r')if x then local y=x:read("*a")x:close()local z,A=load("return "..tostring(y),sFilename)if not z then error(string.format("Failed to load file:\n%s",A),2+w)end return z else error(string.format("No file '%s'.",v),2)end end local function s(v,w,x)a(1,v,"string")a(2,w,"function","nil")a(3,x,"number","nil")return q(r(v,1)(),w,x)end local function t(v,w)a(1,v,"table")a(2,w,"string")if v.subPages then for x=1,#v.subPages do if v.subPages[x].name==w then return v.subPages[x]end end for x=1,#v.subPages do local y=t(v.subPages[x],w)if y then return y end end end end local function u()e("https://pastebin.com/raw/6UV4qfNF","sha256.lua")end return{display=q,displayFile=s,loadFile=r,getSubPage=t,getDependencies=u}