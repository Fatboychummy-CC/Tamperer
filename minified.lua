local a=require("cc.expect").expect local b={}b.X,b.Y=term.getSize()b.bigY=b.Y-2 b.startY=4 local c=0 if pocket then c=1 b.nameLen=8 b.infoLen=16 b.items=11 elseif turtle then c=2 b.nameLen=12 b.infoLen=25 b.items=4 else c=3 b.nameLen=16 b.infoLen=32 b.items=10 end local d={}for u,v in pairs(colors)do d[u]=v d[v]=u end for u,v in pairs(colours)do d[u]=v d[v]=u end local function e(u,v)term.clear()term.setCursorPos(1,1)print("Grabbing a file that is required to display this page...")print(u,"==>",v)if fs.exists(v)then return end local w=http.get(u)if w then print("Connected.")local x=w.readAll()w.close()local y=io.open(v,'w')if y then y:write(x):close()print("Complete.")else error("Failed to open "..tostring(v).." for writing.",2)end else error("Failed to connect to "..tostring(u),2)end end local function f(u,v)u=u or""local w=string.len(u)+1 local x,y=term.getCursorPos()local z=term.getSize()local A=false local B=-1 local C=false term.setCursorBlink(true)while true do local D=type(v)=="string"and string.rep(v:sub(1,1),string.len(u))or u term.setCursorPos(x,y)io.write(string.rep(' ',z-x+1))term.setCursorPos(x,y)local E=w-(z-x+1)if E>=0 then io.write(string.sub(D,E+1))else io.write(D)end local F=x+w-1 if F>z then F=z end term.setCursorPos(F,y)if C then local I=term.getBackgroundColor()term.setBackgroundColor(colors.white)io.write(' ')term.setBackgroundColor(I)end local G={os.pullEvent()}local H=G[1]if H=="char"then local I=G[2]if A then u=string.sub(u,1,w-1)..I..string.sub(u,w+1)else u=string.sub(u,1,w-1)..I..string.sub(u,w)end w=w+1 elseif H=="key"then local I=G[2]if I==keys.backspace then local J=w-2 if w-2<0 then J=0 end u=string.sub(u,1,J)..string.sub(u,w)w=w-1 if w<1 then w=1 end elseif I==keys.enter then term.setCursorBlink(false)print()return u elseif I==keys.right then w=w+1 if w>string.len(u)+1 then w=string.len(u)+1 end elseif I==keys.left then w=w-1 if w<1 then w=1 end elseif I==keys.up then w=1 elseif I==keys.down then w=string.len(u)+1 elseif I==keys.delete then u=string.sub(u,1,w-1)..string.sub(u,w+1)elseif I==keys.insert then if A then A=false term.setCursorBlink(true)os.cancelTimer(B)B=-1 C=false else A=true term.setCursorBlink(false)B=os.startTimer(0.4)end end elseif H=="timer"then local I=G[2]if I==B then C=not C B=os.startTimer(0.4)end end end end local function g(u,v,w,x)if type(u)~=v then error(w.." (expected "..v..", got "..type(u)..")",x and x+1 or 3)end end local function h(u,v,w,x)if type(u)~="string"then error("Check failure: not string",2)end if string.len(u)>v then error("Page layout string "..w.." is too long (max: "..tostring(v)..", at: "..tostring(string.len(u))..")",x and x+1 or 3)end end local function i(u)g(u,"table","Page layout is not a table.")g(u.name,"string","Page: name is of wrong type.")local v="Page "..u.name..": %s is of wrong type."g(u.platform,"string",string.format(v,"platform"))if u.platform=="all"then elseif pocket and u.platform~="pocket"or turtle and u.platform~="turtle"or not pocket and not turtle and(u.platform=="pocket"or u.platform=="turtle")then error("Menu is designed for a different platform ("..u.platform..").",2)end h(u.name,b.nameLen,"page.name")g(u.info,"string",string.format(v,"info"))h(u.info,b.infoLen,"page.info")g(u.bigInfo,"string",string.format(v,"bigInfo"))term.setCursorPos(1,1)local w=write(u.bigInfo)if w>2 then error("Page "..u.name..": bigInfo is too long and prints too many ".."lines.",2)end g(u.colors,"table",string.format(v,"colors"))g(u.colors.bg,"table",string.format(v,"colors.bg"))local x={"main"}for y=1,#x do g(u.colors.bg[x[y]],"string",string.format(v,"colors.bg."..x[y]))end g(u.colors.fg,"table",string.format(v,"colors.fg"))x={"error","main","title","info","listInfo","listTitle","bigInfo","selector","arrowDisabled","arrowEnabled","input"}for y=1,#x do g(u.colors.fg[x[y]],"string",string.format(v,"colors.fg."..x[y]))end if u.selections then for y=1,#u.selections do local z=u.selections[y]local A="Page "..u.name..", selection "..tostring(y)..": %s is of wrong type."local B="page.settings["..tostring(y).."].%s"g(z.title,"string",string.format(A,"title"))h(z.title,b.nameLen,string.format(B,"title"))g(z.info,"string",string.format(A,"info"))h(z.info,b.infoLen,string.format(B,"info"))g(z.bigInfo,"string",string.format(A,"bigInfo"))term.setCursorPos(1,1)local C=write(z.bigInfo)if C>2 then error("Page "..u.name..", selection "..tostring(y)..": bigInfo is too long and prints too many ".."lines (Unknown max length).",2)end end else u.selections={}end if u.settings then for y=1,#u.settings do local z=u.settings[y]local A="Page "..u.name..", setting "..tostring(y)..": %s is of wrong type."local B="page.settings["..tostring(y).."].%s"g(z.title,"string",string.format(A,"title"))h(z.title,b.nameLen,"title")g(z.bigInfo,"string",string.format(A,"bigInfo"))term.setCursorPos(1,1)local C=write(z.bigInfo)if C>2 then error("Page "..u.name..", setting "..tostring(y)..": bigInfo is too long and prints too many ".."lines (Unknown max length).",2)end g(z.setting,"string",string.format(A,"setting"))g(z.tp,"string",string.format(A,"tp"))if z.min then g(z.min,"number",string.format(A,"min"))end if z.max then g(z.max,"number",string.format(A,"max"))end if z.tp=="password"then g(z.store,"string",string.format(A,"store"))if z.store~="plain"and z.store~="sha256"and z.store~="sha256salt"and z.store~="kristwallet"then error(string.format("Page %s, setting %d: store is not of allowed ".."values (plain, sha256, sha256salt, kristwallet)",u.name,y),2)elseif z.store~="plain"then e("https://pastebin.com/raw/6UV4qfNF","/sha256.lua")end end end else u.settings={}end if u.subPages then for y=1,#u.subPages do local z=u.subPages[y]local A="Subpage %d: %s is of wrong type."g(z.name,"string",string.format(A,y,"name"))g(z.info,"string",string.format(A,y,"info"))g(z.bigInfo,"string",string.format(A,y,"bigInfo"))term.setCursorPos(1,1)local B=write(z.bigInfo)if B>2 then error("Page "..u.name..", subpage "..tostring(y)..": bigInfo is too long and prints too many ".."lines (Unknown max length).",2)end end else u.subPages={}end term.clear()end local function j(u,v)local w=#u.selections local x=#u.settings local y=#u.subPages if v>w then if v>w+x then if v==w+x+y+1 then return 1,{title=u.final or"Exit",info="",bigInfo=""}end if v>w+x+y then return 0 end return 3,u.subPages[v-w-x]end return 2,u.settings[v-w]end return 1,u.selections[v]end local function k(u)return#u.selections+#u.settings+#u.subPages end local function l(u,v,w)local x=tostring(settings.get(v.setting))local y,z=term.getSize()if x=="nil"then x="0"end while true do term.setCursorPos(b.nameLen+3,b.startY+w)io.write(string.rep(' ',y-14))term.setCursorPos(b.nameLen+3,b.startY+w)local A=tonumber(f(x))if not A then term.setCursorPos(b.nameLen+3,b.startY+w)io.write(string.rep(' ',y-14))term.setCursorPos(b.nameLen+3,b.startY+w)local B=term.getTextColor()term.setTextColor(d[u.colors.fg.error])io.write("Not a number.")term.setTextColor(B)os.sleep(2)else local B=true if v.min and A<v.min then B=false term.setCursorPos(b.nameLen+3,b.startY+w)io.write(string.rep(' ',y-14))term.setCursorPos(b.nameLen+3,b.startY+w)local C=term.getTextColor()term.setTextColor(d[u.colors.fg.error])io.write(string.format("Minimum: %d",v.min))term.setTextColor(C)x=tostring(v.min)end if v.max and A>v.max then B=false term.setCursorPos(b.nameLen+3,b.startY+w)io.write(string.rep(' ',y-14))term.setCursorPos(b.nameLen+3,b.startY+w)local C=term.getTextColor()term.setTextColor(d[u.colors.fg.error])io.write(string.format("Maximum: %d",v.max))term.setTextColor(C)x=tostring(v.max)end if B then return A else os.sleep(2)end end end end local function m(u,v,w)local x=tostring(d[settings.get(v.setting)])local y,z=term.getSize()if x=="nil"then x="?"end while true do term.setCursorPos(b.nameLen+3,b.startY+w)io.write(string.rep(' ',y-14))term.setCursorPos(b.nameLen+3,b.startY+w)local A=f(x)local B=tonumber(A)if B then if d[B]then return B else term.setCursorPos(b.nameLen+3,b.startY+w)io.write(string.rep(' ',y-14))term.setCursorPos(b.nameLen+3,b.startY+w)local C=term.getTextColor()term.setTextColor(d[u.colors.fg.error])io.write("Not a color.")term.setTextColor(C)os.sleep(2)end else if d[A]then return d[A]else term.setCursorPos(b.nameLen+3,b.startY+w)io.write(string.rep(' ',y-14))term.setCursorPos(b.nameLen+3,b.startY+w)local C=term.getTextColor()term.setTextColor(d[u.colors.fg.error])io.write("Not a color.")term.setTextColor(C)os.sleep(2)end end end end local function n(u,v,w)local x,y=term.getSize()while true do term.setCursorPos(2,b.startY+w)io.write(string.rep(' ',x-1))term.setCursorPos(2,b.startY+w)term.setTextColor(d[u.colors.fg.listTitle])io.write("Password:")term.setCursorPos(b.nameLen+3,b.startY+w)io.write(string.rep(' ',x-14))term.setCursorPos(b.nameLen+3,b.startY+w)term.setTextColor(d[u.colors.fg.input])local z=f("",'*')term.setCursorPos(2,b.startY+w)io.write(string.rep(' ',x-1))term.setCursorPos(2,b.startY+w)term.setTextColor(d[u.colors.fg.listTitle])io.write("Repeat:")term.setCursorPos(b.nameLen+3,b.startY+w)io.write(string.rep(' ',x-14))term.setCursorPos(b.nameLen+3,b.startY+w)term.setTextColor(d[u.colors.fg.input])local A=f("",'*')if z==A then local B if v.store=="sha256"or v.store=="sha256salt"or v.store=="kristwallet"then local C=require(".sha256")if v.store=="sha256salt"then B=math.random(1,100000)z=tostring(B)..","..z end if v.store=="kristwallet"then z="KRISTWALLET"..z end z=C.digest(z):toHex()if v.store=="kristwallet"then z=z.."-000"end end return z,B else term.setCursorPos(b.nameLen+3,b.startY+w)io.write(string.rep(' ',x-14))term.setCursorPos(b.nameLen+3,b.startY+w)local B=term.getTextColor()term.setTextColor(d[u.colors.fg.error])io.write("Not matching!")term.setTextColor(B)os.sleep(2)end end end local function o(u,v,w)local x,y=term.getSize()local z=false term.setTextColor(d[u.colors.fg.listTitle])term.setCursorPos(2,b.startY+w)io.write(string.rep(' ',x-1))term.setCursorPos(2,b.startY+w)io.write("You sure?")while true do term.setCursorPos(b.nameLen+3,b.startY+w)io.write(string.rep(' ',x-14))term.setCursorPos(b.nameLen+3,b.startY+w)term.setTextColor(d[u.colors.fg.input])io.write(z and"[ YES ] NO"or"  YES [ NO ]")local A,B=os.pullEvent("key")if B==keys.right or B==keys.left or B==keys.tab then z=not z elseif B==keys.enter then return z end end end local function p(u,v,w)local x,y=term.getSize()local z,A=j(u,v)local B if z~=2 then error("Dawg something happened!",2)end term.setCursorPos(b.nameLen+3,b.startY+w)term.setTextColor(colors[u.colors.fg.input])if A.tp=="string"then local C=f(settings.get(A.setting))settings.set(A.setting,C)settings.save(u.settings.location)B=C elseif A.tp=="number"then local C=l(u,A,w)settings.set(A.setting,C)settings.save(u.settings.location)B=C elseif A.tp=="color"then local C=m(u,A,w)settings.set(A.setting,C)settings.save(u.settings.location)B=C elseif A.tp=="boolean"then local C=settings.get(A.setting)if C==nil then C=true else C=not C end settings.set(A.setting,C)settings.save(u.settings.location)B=C elseif A.tp=="password"then if o(u,A,w)then local C,D=n(u,A,w)settings.set(A.setting,C)if D then settings.set(A.setting..".salt",D)end settings.save(u.settings.location)end B=""else local C=term.getTextColor()term.setTextColor(d[u.colors.fg.error])io.write(string.format("Cannot edit type '%s'.",A.tp))term.setTextColor(C)os.sleep(2)end return u.settings.location,A.setting,B,u end local function q(u,v,w)a(1,u,"table")a(2,v,"function","nil")a(3,w,"number","nil")v=v or function()end local x=1 local y=1 local z=1 local A={}local B=false local C local D i(u)if not u.settings.location then u.settings.location=".settings"end settings.load(u.settings.location)if w then C=os.startTimer(w)end local function E()while true do term.setBackgroundColor(colors[u.colors.bg.main])term.setTextColor(colors[u.colors.fg.title])term.clear()term.setCursorPos(1,1)io.write(u.name)term.setCursorPos(1,2)term.setTextColor(colors[u.colors.fg.info])io.write(u.info)for L=0,b.items-1 do local M,N=j(u,z+L)term.setCursorPos(2,5+L)if M==1 then term.setTextColor(colors[u.colors.fg.listTitle])io.write(N.title)term.setCursorPos(b.nameLen+3,5+L)term.setTextColor(colors[u.colors.fg.listInfo])io.write(N.info)elseif M==2 then local O=settings.get(N.setting)if type(O)=="string"and string.len(O)>b.infoLen then O=O:sub(1,b.infoLen-3)O=O.."..."end term.setTextColor(colors[u.colors.fg.listTitle])io.write(N.title)term.setCursorPos(b.nameLen+3,5+L)term.setTextColor(colors[u.colors.fg.listInfo])if N.tp=="string"or N.tp=="number"then io.write(O or"Error: empty")elseif N.tp=="boolean"then if O==true then io.write("  false [ true ]")elseif O==false then io.write("[ false ] true")else io.write("? false ? true ?")end elseif N.tp=="color"then io.write(O and string.format("%s (%d)",d[O],O)or"? (nil)")elseif N.tp=="password"then local P={plain="Plaintext",sha256="sha256",sha256salt="sha256 + salt",kristwallet="Kristwallet"}if pocket then io.write(O and P[N.store]or"Not yet set")else io.write(O and"Stored as "..P[N.store]or"Not yet set")end else io.write(pocket and"Unsupported"or"Unsupported type.")end elseif M==3 then term.setTextColor(colors[u.colors.fg.listTitle])io.write(N.name)term.setTextColor(colors[u.colors.fg.listInfo])term.setCursorPos(b.nameLen+3,5+L)io.write(N.info)elseif M~=0 then io.write("Broken.")end end local G,H=j(u,x)term.setTextColor(colors[u.colors.fg.bigInfo])term.setCursorPos(1,b.Y-2)io.write(H.bigInfo)term.setCursorPos(1,b.startY+y)term.setTextColor(colors[u.colors.fg.selector])io.write(">")term.setCursorPos(1,b.startY+b.items+1)if z+b.items>k(u)+1 then term.setTextColor(colors[u.colors.fg.arrowDisabled])else term.setTextColor(colors[u.colors.fg.arrowEnabled])end io.write(string.char(31))term.setCursorPos(1,b.startY)if z>1 then term.setTextColor(colors[u.colors.fg.arrowEnabled])else term.setTextColor(colors[u.colors.fg.arrowDisabled])end io.write(string.char(30))local function I()x=x-1 if y==1 then z=z-1 end if z<1 then z=1 end y=y-1 if y<1 then y=1 end if x<1 then x=k(u)+1 y=(k(u)+1)<b.items and(k(u)+1)or b.items z=x-b.items+1 if z<1 then z=1 end end end local function J()x=x+1 if y==b.items then z=z+1 end y=y+1 if y>b.items then y=b.items end if x>k(u)+1 then x=1 z=1 y=1 end end local K=table.pack(os.pullEvent())if K[1]=="key"then B=true local L,M=table.unpack(K,1,2)if M==keys.up then I()elseif M==keys.down then J()elseif M==keys.enter then if G==1 then D=x return elseif G==2 then local N,O,P,Q=p(u,x,y)v(N,O,P,Q)settings.save(N)elseif G==3 then local N,O=j(u,x)if not O.colors then O.colors=u.colors end if not O.platform then O.platform=u.platform end if not O.settings then O.settings={location=u.settings.location}end if not O.settings.location then O.settings.location=u.settings.location end q(O,v)end end elseif K[1]=="mouse_scroll"then B=true if K[2]==-1 then I()else J()end elseif K[1]=="timer"and K[2]==C and not B then D=1 return end end end local function F()if C then local G for H=w,1,-1 do G=H local I=tostring(H)term.setTextColor(colors.white)term.setBackgroundColor(colors.black)term.setCursorPos(b.X-#tostring(H+1),3)io.write(string.rep(' ',#tostring(H+1)))term.setCursorPos(b.X-#I,3)io.write(I)if B then break end os.sleep(1)end term.setCursorPos(b.X-#tostring(G+1),3)term.setBackgroundColor(colors.black)io.write(string.rep(' ',#tostring(G+1)))end while true do os.pullEvent("Nonexistant")end end parallel.waitForAny(E,F)if D then return D end printError("This shouldn't happen.")printError("Please report to le github with your layout file.")os.sleep(30)end local function r(u,v)a(1,u,"string")a(2,v,"number","nil")v=v or 0 local w=io.open(u,'r')if w then local x=w:read("*a")w:close()local y,z=load("return "..tostring(x),sFilename)if not y then error(z,2+v)end return y else error(string.format("No file '%s'.",u),2)end end local function s(u,v,w)a(1,u,"string")a(2,v,"function","nil")a(3,w,"number","nil")return q(r(u,1)(),v,w)end local function t(u,v)a(1,u,"table")a(2,v,"string")if u.subPages then for w=1,#u.subPages do if u.subPages[w].name==v then return u.subPages[w]end end for w=1,#u.subPages do local x=t(u.subPages[w],v)if x then return x end end end end return{display=q,displayFile=s,loadFile=r,getSubPage=t}